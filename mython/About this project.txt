'Mython' is a simplified simulation of a python interpreter implemented in C++.

How does it work?
In short,
The "Interpreter" class has a loop that sends all user input to the 'ParseString' function.
'ParseString' checks weather the user is writing a value literal, a variable name, an assignment operation
or a function. ParseString then calls the 'getType' function to determine what variable type is to be dealt with. 
'ParseString' will returns the type of variable requested in an object allocated to the heap.
If the value is a literal (say, "3"), the object will have the boolean isTemp = true
and be deleted following its usage in that iteration.

operations such as 'a = 3' will check if 'a' is an existing variable name or a new one to allocate,
as well as a valid one (does not start with a number or contain illegal chars).
The getType function will translate the substring on the right side of the '=' operator to a type
of variable-representing object. 

'Mython' supports the following operations:
+int, boolean, void, string and list variables
+typecheck: lists must contain legal variable values seperated by commas and between square brackets.
	for example:
	['this is a string', True, 13, 4]
assignment:
	for example:
	a =  3, allocates the object a which is of type integer
	b = [5,False,"hello"] , allocates the object b which is a list
	a = b will delete a's previous object and make a the same list (shallow copy, not deep, becuase
	thats how the real python interpereter works)
because all operations requested by the user return a 'Type' (class) object, 
an assignment operation returns a Void class object.

trying to assign to a non existing variable say,
	a = c //'c' does not exist
will result in the error:
"Error: name 'c' is not defined".

print value:
	>>>a = 5 //assignment	
	>>>a	//ask to see value
	5	//value printed

String objects are tested to assure a string starting with ' doesnt contain a single quotation mark in it
Strings that start with " are tested not to contain double quotation marks.
As long as the string doesn't contain a single quotation mark in it it will be transformed into a single quotation wrapped
string. 
	for example:
	"chocolate cake"
	will be saved as:
	'chocolate cake'

check for illegal parsing:
+commands must not begin with spaces or tabs
illegal syntax (beit illegal spacing or unrecognised commands) will result in an
'illegal sytax' error message.


Functions:
type('enter variable name or literal here')
will print the type.
for example:
	
	>>>type(False)
	<type 'Boolean'>
	>>>b = [12, "abc"]
	>>>type(b)
        <type 'List'>

del
used to delete existing variable
for example:
	>>>a=3
	>>>a
	3
	>>>del a
	>>>a
	error: name 'a' not defined

typing a function name will print a definition
for example:
	>>>del
	<built-in function del>

quit()
to exit interpreter
